{"version":3,"sources":["components/Carousel/utilits/animatedMove.js","components/Carousel/utilits/makeContentDOM.js","components/Carousel/images/right_arrow.svg","components/Carousel/images/left_arrow.svg","components/Carousel/components/CarouselButton/CarouselButton.js","components/Carousel/components/CarouselPageLink/CarouselPageLink.js","components/Carousel/components/CarouselPagination/CarouselPagination.js","components/Carousel/components/CarouselContent/CarouselContent.js","components/Carousel/Carousel.js","components/App.js","index.js"],"names":["animatedMove","startPoint","endPoint","currentFrame","requestAnimationFrame","currentframe","framesNum","moveDistance","animationFunction","Math","sin","PI","document","querySelector","style","left","animationStep","makeContentDOM","content","itemsPerView","loop","length","Array","fill","reduce","editedContent","currentEl","i","push","firstPart","contentArr","centralPart","lastPart","concat","CarouselButton","props","size","moveTo","position","buttonClassName","isActive","leftArrow","rightArrow","handler","direction","onClick","className","src","alt","CarouselPageLink","id","CarouselPagination","itemsQuantity","buttonsArr","currentValue","index","toString","CarouselContent","mouseEvents","touchEvents","getClientX","bind","onMoveStart","onMove","onMoveEnd","event","this","includes","type","clientX","changedTouches","preventDefault","addEventListener","removeEventListener","ref","forwardRef","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","children","React","Component","Carousel","carouselContent","createRef","carousel","gap","undefined","DOMItemsQuantity","state","wasMounted","currentPos","correctPositions","prevButtonIsActive","nextButtonIsActive","touchPoint","saveTouchPoint","touchMove","buttonMove","paginationMove","positionCorrection","arrowButtonsManage","getLoop","carouselWidth","current","clientWidth","itemWidth","gridTemplate","resultArr","renderingPosition","gridTemplateColumns","setState","movingPoint","offset","mouseUpPos","offsets","map","elem","abs","minOffset","previousValue","nearestCorrectPos","indexOf","newPos","currentIndex","console","log","loopCorrection","buttonSize","buttonPos","App","getRandom","min","max","floor","random","numberOfItems","randomConfig","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e4bd2de4.chunk.js","sourcesContent":["function animatedMove(startPoint, endPoint) {\r\n\r\n    const framesNum = 15 //config the number of animation frames\r\n    let currentFrame = 0\r\n\r\n    function animationStep(currentframe, framesNum, startPoint, endPoint) {\r\n        const moveDistance = endPoint - startPoint\r\n        const animationFunction = (Math.sin((Math.PI / 2) * -1 + Math.PI * currentframe / (framesNum - 1)) + 1) / 2 //sine function from 0 to 1\r\n        document.querySelector('.CarouselContent').style.left = `${startPoint + moveDistance * animationFunction}px`\r\n    }\r\n  \r\n    requestAnimationFrame(function animatedMove() {\r\n\r\n        animationStep(currentFrame, framesNum, startPoint, endPoint)\r\n\r\n        currentFrame++\r\n        if (currentFrame < framesNum) {\r\n            requestAnimationFrame(animatedMove);\r\n        }\r\n  \r\n    });\r\n}\r\n\r\nexport default animatedMove","import React from \"react\";\r\n\r\nfunction makeContentDOM(content, itemsPerView, loop) {\r\n    if (!loop || content.length <= itemsPerView) {\r\n        return Array(content.length).fill('').reduce((editedContent, currentEl, i) => {\r\n            editedContent.push(\r\n                <div key={i}>{content[i]}</div>\r\n            )\r\n            return editedContent\r\n        }, [])\r\n    } else {\r\n        let infiniteContent = []\r\n        const firstPart = content.reduce((contentArr, currentEl, i) => {\r\n            if (i >= content.length - itemsPerView) {\r\n                contentArr.push(<div key={i - content.length}>{content[i]}</div>)\r\n            }\r\n            return contentArr\r\n        }, [])\r\n        const centralPart = content.reduce((contentArr, currentEl, i) => {\r\n            contentArr.push(<div key={i}>{content[i]}</div>)\r\n            return contentArr\r\n        }, [])\r\n        const lastPart = content.reduce((contentArr, currentEl, i) => {\r\n            if (i < itemsPerView) {\r\n                contentArr.push(<div key={i + content.length}>{content[i]}</div>)\r\n            }\r\n            return contentArr\r\n        }, [])\r\n        return infiniteContent = firstPart.concat(centralPart, lastPart)\r\n    }\r\n}\r\n\r\nexport default makeContentDOM","export default __webpack_public_path__ + \"static/media/right_arrow.4e2eb212.svg\";","export default __webpack_public_path__ + \"static/media/left_arrow.9d3f788d.svg\";","import React from \"react\";\r\nimport rightArrow from '../../images/right_arrow.svg'\r\nimport leftArrow from '../../images/left_arrow.svg'\r\nimport './CarouselButton.css';\r\n\r\nfunction CarouselButton(props) {\r\n\r\n    const style = {\r\n        'width': `${props.size}px`,\r\n        'height': `${props.size}px`,\r\n        'top': `calc((100% - 60px) / 2 - ${props.size / 2}px)`,\r\n        'left': `${props.moveTo === 'previous' ? props.position : 'auto'}px`,\r\n        'right': `${props.moveTo === 'next' ? props.position : 'auto'}px`\r\n    }\r\n\r\n    function move() {\r\n        let direction = props.moveTo === 'previous' ? -1 : 1\r\n        props.onClick(direction)\r\n    }\r\n\r\n    let buttonClassName = `CarouselButton`\r\n    if (!props.isActive) {\r\n        buttonClassName = buttonClassName.concat(` CarouselButton_unactive`)\r\n    }\r\n\r\n    const content = props.moveTo === 'previous' ? leftArrow : rightArrow\r\n    const handler = props.isActive ? move : null\r\n\r\n    return(\r\n        <button className={buttonClassName} onClick={handler} style={style}>\r\n            <img src={content} alt={`${props.moveTo} button`}/> \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CarouselButton","import React, { Component, useState, useEffect } from \"react\";\r\nimport './CarouselPageLink.css';\r\n\r\nfunction CarouselPageLink(props) {\r\n\r\n    function goTo() {\r\n        props.onClick(props.id)\r\n    }\r\n\r\n    return(\r\n        <button className='CarouselPageLink' onClick={goTo}>\r\n            {props.id + 1}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CarouselPageLink","import React from \"react\";\r\nimport './CarouselPagination.css';\r\nimport CarouselPageLink from \"../CarouselPageLink/CarouselPageLink\";\r\n\r\nfunction CarouselPagination(props) {\r\n\r\n    function makePaginationDOM() {\r\n        return Array(props.itemsQuantity).fill('').reduce((buttonsArr, currentValue, index) => {\r\n            buttonsArr.push(\r\n                <CarouselPageLink key={index.toString()} id={index} onClick={props.onClick}/>\r\n            )\r\n            return buttonsArr\r\n        }, [])\r\n    }\r\n\r\n    return(\r\n        <div className='CarouselPagination'>\r\n            {makePaginationDOM()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselPagination","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport './CarouselContent.css';\r\n\r\nclass CarouselContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.mouseEvents = ['mousedown','mousemove','mouseup']\r\n        this.touchEvents = ['touchstart','touchmove','touchend']\r\n        this.getClientX = this.getClientX.bind(this)\r\n        this.onMoveStart = this.onMoveStart.bind(this)\r\n        this.onMove = this.onMove.bind(this)\r\n        this.onMoveEnd = this.onMoveEnd.bind(this)\r\n    }\r\n\r\n    getClientX(event) {\r\n        if (this.mouseEvents.includes(event.type)) {\r\n            return event.clientX\r\n        } else if (this.touchEvents.includes(event.type)) {\r\n            return event.changedTouches[0].clientX\r\n        }\r\n    }\r\n\r\n    onMoveStart(event) {\r\n        if (this.mouseEvents.includes(event.type)) {\r\n            event.preventDefault()\r\n            document.addEventListener('mousemove', this.onMove)\r\n            document.addEventListener('mouseup', this.onMoveEnd)\r\n        }\r\n        this.props.onMoveStart(this.getClientX(event))\r\n    }\r\n\r\n    onMove(event) {\r\n        this.props.onMove(this.getClientX(event))\r\n    }\r\n\r\n    onMoveEnd(event) {\r\n        if (this.mouseEvents.includes(event.type)) {\r\n            document.removeEventListener('mousemove', this.onMove)\r\n            document.removeEventListener('mouseup', this.onMoveEnd)\r\n        }\r\n        this.props.onMoveEnd(this.getClientX(event))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='CarouselContent' \r\n                ref={this.props.forwardRef} \r\n                onMouseDown={this.onMoveStart}\r\n                onTouchStart={this.onMoveStart} \r\n                onTouchMove={this.onMove} \r\n                onTouchEnd={this.onMoveEnd}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <CarouselContent {...props} forwardRef={ref} />)","import React, { createRef, Component } from \"react\";\r\nimport './Carousel.css';\r\nimport animatedMove from \"./utilits/animatedMove\";\r\nimport makeContentDOM from './utilits/makeContentDOM'\r\nimport CarouselButton from \"./components/CarouselButton/CarouselButton\";\r\nimport CarouselPagination from \"./components/CarouselPagination/CarouselPagination\";\r\nimport CarouselContent from \"./components/CarouselContent/CarouselContent\";\r\n\r\nclass Carousel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.carouselContent = createRef()\r\n        this.carousel = createRef()\r\n\r\n        this.itemsQuantity = this.props.children.length\r\n        this.itemsPerView = this.props.itemsPerView ? this.props.itemsPerView : 1\r\n        this.gap = this.props.gap !== undefined ? this.props.gap : 10\r\n        this.loop = this.props.loop ? this.props.loop : false\r\n        this.DOMItemsQuantity = this.loop && this.itemsQuantity > this.itemsPerView ? this.itemsQuantity + 2 * this.itemsPerView : this.itemsQuantity \r\n        // if (loop) we need to duplicate some items\r\n\r\n        this.state ={\r\n            wasMounted: false,\r\n            currentPos: 0, //current style.left of carousel content block\r\n            correctPositions: [], //array of correct coordinates for carousel content block\r\n            prevButtonIsActive: this.loop && this.itemsQuantity > this.itemsPerView,\r\n            nextButtonIsActive: this.itemsQuantity > this.itemsPerView,\r\n            touchPoint: 0\r\n        }\r\n\r\n        this.saveTouchPoint = this.saveTouchPoint.bind(this)\r\n        this.touchMove = this.touchMove.bind(this)\r\n        this.buttonMove = this.buttonMove.bind(this)\r\n        this.paginationMove = this.paginationMove.bind(this)\r\n        this.positionCorrection = this.positionCorrection.bind(this)\r\n        this.arrowButtonsManage = this.arrowButtonsManage.bind(this)\r\n        this.getLoop = this.getLoop.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.wasMounted) {\r\n            const carouselWidth = this.carousel.current.clientWidth\r\n            const itemWidth = (carouselWidth - (this.gap * (this.itemsPerView - 1))) / this.itemsPerView\r\n            const gridTemplate = `repeat(${this.DOMItemsQuantity}, ${itemWidth}px)`\r\n            const correctPositions = (this.itemsQuantity <= this.itemsPerView) ?\r\n                [(carouselWidth - (itemWidth * this.itemsQuantity + this.gap * (this.itemsQuantity - 1))) / 2] :\r\n                Array(this.DOMItemsQuantity - this.itemsPerView + 1).fill(0).reduce((resultArr, currentValue, index) => {\r\n                    resultArr.push(index * (itemWidth + this.gap) * -1)\r\n                    return resultArr\r\n                }, [])\r\n            const renderingPosition = (this.itemsQuantity <= this.itemsPerView) ?\r\n                (carouselWidth - (itemWidth * this.itemsQuantity + this.gap * (this.itemsQuantity - 1))) / 2 :\r\n                (this.loop) ? correctPositions[this.itemsPerView] : 0\r\n            this.carouselContent.current.style.left = `${renderingPosition}px`\r\n            this.carouselContent.current.style.gap = `0px ${this.gap}px`\r\n            this.carouselContent.current.style.gridTemplateColumns = gridTemplate\r\n            this.setState({\r\n                currentPos: renderingPosition,\r\n                correctPositions: correctPositions,\r\n                wasMounted: true\r\n            })\r\n        }\r\n    }\r\n\r\n    saveTouchPoint(touchPoint) {\r\n        this.setState({touchPoint: touchPoint})\r\n    }\r\n    \r\n    touchMove(movingPoint) {\r\n        const offset = movingPoint - this.state.touchPoint\r\n        this.carouselContent.current.style.left = `${this.state.currentPos + offset}px`\r\n        // console.log(this.carouselContent.current.style.left)\r\n    }\r\n\r\n    positionCorrection(mouseUpPos) {\r\n        const currentPos = this.state.currentPos - this.state.touchPoint + mouseUpPos\r\n        const offsets = this.state.correctPositions.map((elem) => {\r\n            return Math.abs(currentPos - elem)\r\n        })\r\n        const minOffset = offsets.reduce((previousValue, currentValue) => {\r\n            return currentValue < previousValue ? currentValue : previousValue\r\n        })\r\n        const nearestCorrectPos = offsets.indexOf(minOffset)\r\n        const newPos = this.state.correctPositions[nearestCorrectPos]\r\n        this.arrowButtonsManage(this.state.correctPositions.indexOf(newPos))\r\n        animatedMove(currentPos, newPos)\r\n        this.getLoop(newPos)\r\n    }\r\n\r\n    buttonMove(direction) {\r\n        const currentIndex = this.state.correctPositions.indexOf(this.state.currentPos)\r\n        const newPos = this.state.correctPositions[currentIndex + direction]\r\n        this.arrowButtonsManage(this.state.correctPositions.indexOf(newPos))\r\n        animatedMove(this.state.currentPos, newPos)\r\n        this.getLoop(newPos)\r\n    }\r\n\r\n    paginationMove(id) {\r\n        console.log(this.state.correctPositions)\r\n        //if (loop) we have additional carousel items in DOM\r\n        const loopCorrection = this.loop && this.itemsQuantity > this.itemsPerView ? this.itemsPerView : 0\r\n        let newPos = this.state.correctPositions[id + loopCorrection]\r\n        if (newPos === undefined) { //this can happen if you go to the last item of carousel and loop is unactive\r\n            newPos = this.state.correctPositions[this.itemsQuantity - this.itemsPerView] //it wiil be move on nearest correct position \r\n        }\r\n        if (newPos !== this.state.currentPos) {\r\n            this.arrowButtonsManage(this.state.correctPositions.indexOf(newPos))\r\n            animatedMove(this.state.currentPos, newPos)\r\n            this.setState({currentPos: newPos})\r\n        }\r\n    }\r\n\r\n    arrowButtonsManage(position) {\r\n        if (!this.loop) {\r\n            if (position === 0) {\r\n                this.setState({prevButtonIsActive: false})\r\n            } else if (position !== 0 && !this.state.prevButtonIsActive) {\r\n                this.setState({prevButtonIsActive: true})\r\n            }\r\n            if (position === this.state.correctPositions.length - 1) {\r\n                this.setState({nextButtonIsActive: false})\r\n            } else if (position !== this.state.correctPositions.length - 1 && !this.state.nextButtonIsActive) {\r\n                this.setState({nextButtonIsActive: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    getLoop(newPos) {\r\n        if (this.loop && this.state.correctPositions.indexOf(newPos) === 0 && this.state.correctPositions.length > 1) {\r\n            this.carouselContent.current.style.left = this.state.correctPositions[this.itemsQuantity] //flash move to tearget point\r\n            this.setState({currentPos: this.state.correctPositions[this.itemsQuantity]})\r\n        } else if (this.loop && this.state.correctPositions.indexOf(newPos) === this.state.correctPositions.length - 1 && this.state.correctPositions.length > 1) {\r\n            this.carouselContent.current.style.left = this.state.correctPositions[this.state.correctPositions.length - 1 - this.itemsQuantity] //flash move to tearget point\r\n            this.setState({currentPos: this.state.correctPositions[this.state.correctPositions.length - 1 - this.itemsQuantity]})\r\n        } else {\r\n            this.setState({currentPos: newPos})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='Carousel__container'>\r\n                <div className='Carousel' ref={this.carousel}>\r\n                    <CarouselContent onMoveStart={this.saveTouchPoint} \r\n                                    onMove={this.touchMove} \r\n                                    onMoveEnd={this.positionCorrection}\r\n                                    ref={this.carouselContent}\r\n                    >\r\n                        {makeContentDOM(this.props.children, this.itemsPerView, this.loop)}  \r\n                    </CarouselContent>\r\n                    <CarouselPagination onClick={this.paginationMove} \r\n                                        itemsQuantity={this.itemsQuantity}\r\n                    />\r\n                </div>\r\n                <CarouselButton moveTo='previous'\r\n                                isActive={this.state.prevButtonIsActive} \r\n                                onClick={this.buttonMove}\r\n                                size={this.props.buttonSize}\r\n                                position={this.props.buttonPos}\r\n                />\r\n                <CarouselButton moveTo='next' \r\n                                isActive={this.state.nextButtonIsActive}\r\n                                onClick={this.buttonMove}\r\n                                size={this.props.buttonSize}\r\n                                position={this.props.buttonPos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel","import React from \"react\";\r\nimport './App.css'\r\nimport '../styles/anyClassName.css'\r\nimport Carousel from \"./Carousel/Carousel\"\r\n\r\nfunction App() {\r\n\r\n    function makeContentArr(numberOfItems) {\r\n        return Array(numberOfItems).fill('').reduce((content, elem, i) => {\r\n            content.push(<div key={i} className='anyClassName'>{i + 1}</div>)\r\n            return content\r\n        }, [])\r\n    }\r\n\r\n    function getRandom(min, max) {\r\n        return Math.floor(min + Math.random() * Math.floor(max + 1 - min));\r\n    }\r\n\r\n    const randomConfig = {\r\n        content: getRandom(1,10),\r\n        gap: getRandom(0,4) * 5,\r\n        itemsPerView: getRandom(3,5),\r\n        loop: getRandom(0,1) === 0 ? true : false,\r\n        buttonSize: getRandom(4,10) * 5,\r\n        buttonPos: getRandom(0,1) === 0 ? 10 : -40\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <h1 className='text'>Number of items: {randomConfig.content}</h1>\r\n            <h1 className='text'>Gap: {randomConfig.gap}px</h1>\r\n            <h1 className='text'>Items per view: {randomConfig.itemsPerView}</h1>\r\n            <h1 className='text'>Loop: {randomConfig.loop.toString()}</h1>\r\n            <h1 className='text'>Buttons size: {randomConfig.buttonSize}px</h1>\r\n            <h1 className='text'>Buttons position: {randomConfig.buttonPos > 0 ? 'in' : 'out'}</h1>\r\n            <h1 className='text'>Current settings was generated randomly. If you need to check how it works with other settings just refresh the page</h1>\r\n            <Carousel\r\n                gap={randomConfig.gap}\r\n                itemsPerView={randomConfig.itemsPerView}\r\n                loop={randomConfig.loop}\r\n                buttonSize={randomConfig.buttonSize}\r\n                buttonPos={randomConfig.buttonPos}\r\n            >\r\n                {makeContentArr(randomConfig.content)}\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}